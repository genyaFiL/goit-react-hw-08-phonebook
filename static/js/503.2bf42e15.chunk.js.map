{"version":3,"file":"static/js/503.2bf42e15.chunk.js","mappings":"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","sources":["redux/selectors.jsx","webpack://react-homework-template/./src/components/ContactForm/ContactFormStyles.module.css?9446","components/ContactForm/ContactForm.jsx","webpack://react-homework-template/./src/components/ContactItem/ContactItem.module.css?be2b","components/ContactItem/ContactItem.jsx","components/ContactList/ContactList.jsx","webpack://react-homework-template/./src/components/Filter/FilterStyles.module.css?c9ee","components/Filter/Filter.jsx","pages/Contacts.js"],"sourcesContent":["export const getContacts = state => state.contacts.contacts;\nexport const getFilter = state => state.filters;\n","// extracted by mini-css-extract-plugin\nexport default {\"form_contacts\":\"ContactFormStyles_form_contacts__eSl38\",\"form_input\":\"ContactFormStyles_form_input__HZQTy\"};","import { useEffect, useState } from 'react';\nimport css from './ContactFormStyles.module.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getContacts } from 'redux/selectors';\nimport { addContact } from 'api/ContactsAPI';\n\nexport default function ContactForm() {\n  const [name, setName] = useState('');\n  const [phone, setPhone] = useState('');\n\n  const { items, isLoading, error } = useSelector(getContacts);\n\n  const dispatch = useDispatch(); // get actions\n\n  useEffect(() => {\n    if (!error && isLoading) {\n      setName('');\n      setPhone('');\n    }\n  }, [error, isLoading, dispatch]);\n\n  const handleChange = ({ target }) => {\n    if (target.name === 'name') setName(target.value);\n    if (target.name === 'phone') setPhone(target.value);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const normalizedName = name.toLocaleLowerCase();\n    items.find(contact => contact.name.toLocaleLowerCase() === normalizedName)\n      ? alert(name + ' is allready in contacts')\n      : dispatch(addContact({ name, number: phone }));\n    setName('');\n    setPhone('');\n  };\n\n  return (\n    <>\n      {/* <h1>Phonebook</h1> */}\n      <form onSubmit={handleSubmit} className={css.form_contacts}>\n        <label htmlFor=\"inputName\">Name</label>\n        <input\n          className={css.form_input}\n          type=\"text\"\n          name=\"name\"\n          id=\"inputName\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          onChange={handleChange}\n          value={name}\n        />\n        <label htmlFor=\"inputNumber\">Number</label>\n        <input\n          className={css.form_input}\n          type=\"tel\"\n          name=\"phone\"\n          id=\"inputNumber\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          onChange={handleChange}\n          value={phone}\n        />\n        <button type=\"submit\">Add contact</button>\n      </form>\n    </>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"ContactItem_item__gxreB\",\"text\":\"ContactItem_text__6hT0E\"};","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { deleteContact } from 'api/ContactsAPI';\nimport styles from './ContactItem.module.css';\n\nconst ContactItem = ({ name, phone, id }) => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(\n    state => state.contacts.contacts[id]?.isLoading\n  );\n\n  const handleDelete = id => {\n    dispatch(deleteContact(id));\n  };\n\n  return (\n    <li className={styles.item}>\n      <span className={styles.text}>\n        {name} : {phone}\n      </span>\n      <button\n        type=\"button\"\n        disabled={isLoading ? true : false}\n        onClick={() => handleDelete(id)}\n      >\n        {isLoading ? <p>Loading...</p> : 'delete'}\n      </button>\n    </li>\n  );\n};\n\nexport default ContactItem;\n\nContactItem.propTypes = {\n  name: PropTypes.string.isRequired,\n  phone: PropTypes.string.isRequired,\n  id: PropTypes.string.isRequired,\n};\n","import React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { getContacts, getFilter } from 'redux/selectors';\nimport { fetchContacts } from 'api/ContactsAPI';\nimport ContactItem from 'components/ContactItem/ContactItem';\n\nexport default function ContactList() {\n  const dispatch = useDispatch();\n  const { items, isLoading, error } = useSelector(getContacts);\n  const { filter } = useSelector(getFilter);\n\n  const [contacts, setContacts] = useState([]);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  useEffect(() => {\n    const normalizedFilter = filter.toString().toLowerCase();\n    setContacts(\n      items.filter(\n        ({ name, number }) =>\n          name.toLowerCase().includes(normalizedFilter) ||\n          number.includes(normalizedFilter)\n      )\n    );\n  }, [filter, items]);\n\n  return (\n    <div>\n      {isLoading ? (\n        <p>Loading...</p>\n      ) : (\n        contacts.map(({ name, number: phone, id }, index) => (\n          <ContactItem name={name} phone={phone} id={id} key={index} />\n        ))\n      )}\n      {error && <p>Something went wrong. An error has occurred: {error}</p>}\n    </div>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"FilterStyles_container__4xzRH\"};","import { useDispatch, useSelector } from 'react-redux';\nimport { setFilter } from 'redux/filterSlice';\nimport { getContacts } from 'redux/selectors';\n\nimport css from './FilterStyles.module.css';\n\nexport default function Filter() {\n  const dispatch = useDispatch();\n  const { items } = useSelector(getContacts);\n\n  const onChange = e => {\n    dispatch(setFilter(e.currentTarget.value));\n  };\n\n  return (\n    <>\n      <div className={css.container}>\n        {items.length !== 0 && (\n          <>\n            <h2>Contacts</h2>\n            <label htmlFor=\"inputFind\">Find contacts by name</label>\n            <input\n              placeholder=\"Search name\"\n              type=\"text\"\n              name=\"name\"\n              id=\"inputFind\"\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n              title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n              required\n              onChange={onChange}\n            />\n          </>\n        )}\n      </div>\n    </>\n  );\n}\n","import React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getContacts } from 'redux/selectors';\n\nimport { fetchContacts } from 'api/ContactsAPI';\n\nimport ContactForm from 'components/ContactForm/ContactForm';\nimport ContactList from 'components/ContactList/ContactList';\nimport Filter from 'components/Filter/Filter';\n\nexport default function Contacts() {\n  const { items } = useSelector(getContacts);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <div>\n      <ContactForm></ContactForm>\n      <Filter></Filter>\n      {items.length > 0 && <ContactList></ContactList>}\n    </div>\n  );\n}\n"],"names":["getContacts","state","contacts","getFilter","filters","ContactForm","useState","name","setName","phone","setPhone","useSelector","items","isLoading","error","dispatch","useDispatch","useEffect","handleChange","target","value","onSubmit","e","preventDefault","normalizedName","toLocaleLowerCase","find","contact","alert","addContact","number","className","css","htmlFor","type","id","pattern","title","required","onChange","styles","disabled","onClick","deleteContact","handleDelete","ContactList","filter","setContacts","fetchContacts","normalizedFilter","toString","toLowerCase","includes","map","index","Filter","length","placeholder","setFilter","currentTarget","Contacts"],"sourceRoot":""}